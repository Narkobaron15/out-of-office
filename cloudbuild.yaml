# cloudbuild.yaml
steps:
  # Backend build and deploy
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA', './backend']
    id: 'Build backend image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA']
    id: 'Push backend image'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud app deploy backend/app.yaml --image-url=gcr.io/$PROJECT_ID/backend:$COMMIT_SHA
    id: 'Deploy backend to App Engine'
    env:
      - '_APP_KEY=${_APP_KEY}'
      - '_DB_HOST=${_DB_HOST}'
      - '_DB_PORT=5432'
      - '_DB_USER=${_DB_USER}'
      - '_DB_PASSWORD=${_DB_PASSWORD}'
      - '_DB_DATABASE=${_DB_DATABASE}'
      - '_BUCKET_NAME=${_BUCKET_NAME}'
      - '_GCLOUD_PROJECT_ID=${PROJECT_ID}'
      - '_GCLOUD_TOKEN=${_GCLOUD_TOKEN}'

  # Frontend build and deploy
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA', './frontend']
    id: 'Build frontend image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA']
    id: 'Push frontend image'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud app deploy frontend/app.yaml --image-url=gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA
    id: 'Deploy frontend to App Engine'
    env:
      - '_VITE_BASE_URL=${_VITE_BASE_URL}'

# You can add more steps here for testing, linting, etc.

timeout: '1600s'

options:
  logging: CLOUD_LOGGING_ONLY
